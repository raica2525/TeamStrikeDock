//===============================================
//
// 背景の処理 (bg.cpp)
// Author : 後藤慎之助
//
//===============================================

//========================
// インクルードファイル
//========================
#include "bg.h"

//=============================================================================
// コンストラクタ
// Author : 後藤慎之助
//=============================================================================
CBg::CBg() :CScene3D(CScene::OBJTYPE_BG)
{

}

//=============================================================================
// デストラクタ
// Author : 後藤慎之助
//=============================================================================
CBg::~CBg()
{

}

//=============================================================================
// 初期化処理
// Author : 後藤慎之助
//=============================================================================
HRESULT CBg::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
    // 初期化
    CScene3D::Init(pos, size);

    // スケールを設定
    SetScale(size);

    // モデルデータをバインド
    BindModelData(34);   // ステージ1は34番

    return S_OK;
}

//=============================================================================
// 終了処理
// Author : 後藤慎之助
//=============================================================================
void CBg::Uninit(void)
{
    CScene3D::Uninit();
}

//=============================================================================
// 更新処理
// Author : 後藤慎之助
//=============================================================================
void CBg::Update(void)
{

}

//=============================================================================
// 描画処理
// Author : 後藤慎之助
//=============================================================================
void CBg::Draw(void)
{
    CScene3D::Draw();
}

//=============================================================================
// インスタンス生成処理
// Author : 後藤慎之助
//=============================================================================
CBg * CBg::Create(void)
{
    // ポインタを用意
    CBg *pBg = NULL;

    // メモリ確保
    pBg = new CBg;

    // 初期化
    pBg->Init(DEFAULT_VECTOR, DEFAULT_SCALE);

    return pBg;
}